openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/api-token-auth/:
    post:
      operationId: api_v1_api_token_auth_create
      description: Аутентификация пользователя
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/basket/:
    get:
      operationId: api_v1_basket_retrieve
      description: Получение данных корзины пользователя
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_basket_create
      description: Добавление товаров в корзину
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    put:
      operationId: api_v1_basket_update
      description: Изменение товаров в корзине
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_basket_destroy
      description: Удаление товаров из корзины
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/order/:
    get:
      operationId: api_v1_order_retrieve
      description: Список всех заказов
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create
      description: Заказ товаров из корзины
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/order/{order_id}/:
    get:
      operationId: api_v1_order_retrieve_2
      description: Список всех заказов
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_v1_order_create_2
      description: Заказ товаров из корзины
      parameters:
      - in: path
        name: order_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/products/:
    get:
      operationId: api_v1_products_list
      description: Товары
      parameters:
      - in: query
        name: model
        schema:
          type: string
      - in: query
        name: product
        schema:
          type: integer
      - in: query
        name: shop
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductInfo'
          description: ''
  /api/v1/products/{id}/:
    get:
      operationId: api_v1_products_retrieve
      description: Товары
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Информация о товаре.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInfoDetail'
          description: ''
  /api/v1/registration/:
    post:
      operationId: api_v1_registration_create
      description: Регистрация пользователя
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/v1/update/:
    post:
      operationId: api_v1_update_create
      description: Обновление товаров в базе
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/user/{id}/:
    get:
      operationId: api_v1_user_retrieve
      description: Данные пользователя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_user_update
      description: Изменение данных пользователя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_user_partial_update
      description: Данные пользователя
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          title: Имя пользователя
        password:
          type: string
          writeOnly: true
          title: Пароль
        token:
          type: string
          readOnly: true
          title: Токен
      required:
      - password
      - token
      - username
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          title: Имя
          maxLength: 50
        last_name:
          type: string
          title: Фамилия
          maxLength: 50
        second_name:
          type: string
          title: Отчество
          maxLength: 50
        company:
          type: string
          title: Компания
          maxLength: 100
        position:
          type: string
          title: Должность
          maxLength: 50
    ProductInfo:
      type: object
      properties:
        model:
          type: string
          nullable: true
          title: Модель товара
          maxLength: 120
        product:
          type: string
          readOnly: true
        shop:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Цена
      required:
      - price
      - product
      - quantity
      - shop
    ProductInfoDetail:
      type: object
      properties:
        model:
          type: string
          nullable: true
          title: Модель товара
          maxLength: 120
        product:
          type: string
          readOnly: true
        shop:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Количество
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Цена
        price_rrc:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Розничная цена
        product_param:
          type: array
          items:
            $ref: '#/components/schemas/ProductParameter'
      required:
      - price
      - product
      - product_param
      - quantity
      - shop
    ProductParameter:
      type: object
      properties:
        name:
          type: string
          title: Параметр
          maxLength: 100
        value:
          type: string
          title: Значение
          maxLength: 100
      required:
      - name
      - value
    Registration:
      type: object
      properties:
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        password:
          type: string
          title: Пароль
          maxLength: 128
      required:
      - password
    User:
      type: object
      properties:
        username:
          type: string
          title: Имя
          maxLength: 50
        last_name:
          type: string
          title: Фамилия
          maxLength: 50
        second_name:
          type: string
          title: Отчество
          maxLength: 50
        company:
          type: string
          title: Компания
          maxLength: 100
        position:
          type: string
          title: Должность
          maxLength: 50
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
